name: CI
on:
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v4

      # Step 2: Set up Python 3.12
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      # Step 3: Create .env file
      - name: Create .env file
        run: |
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> .env
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> .env
          echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" >> .env
          echo "MODEL_ALIAS=${{ secrets.MODEL_ALIAS_STG }}" >> .env
          echo "MODEL_SERVER_IP=${{ secrets.MODEL_SERVER_IP_CI }}" >> .env

      # Step 4: Debug Environment Variables
      - name: Print Environment Variables
        run: |
          echo "MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}"
          echo "MODEL_ALIAS: ${{ secrets.MODEL_ALIAS_STG }}"
          echo "MODEL_SERVER_IP: ${{ secrets.MODEL_SERVER_IP_CI }}"

      # Step 5: Build and Run Docker Container
      - name: Build container
        run: |
          docker compose up api --build -d

      # Step 6: Check if API Server is Running
      - name: Check API Server Logs
        run: |
          docker ps  # Cek apakah container API server jalan
          docker logs mlflow_api  # Cek logs container API server

      - name: Test API Server
        run: |
          curl -X POST http://localhost:8080/predict/ \
          -H "Content-Type: application/json" \
          -d '{"x1": 1, "x2": 1, "x3": 1, "x4": 1}'

      # Step 8: Install Dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 9: Run Unit Tests
      - name: Test with Pytest
        run: |
          pytest unit_test/unit_test.py